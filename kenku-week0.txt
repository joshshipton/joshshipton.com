What I’ve learnt the first week of programming my “startup”
10/11/2023

I wanted to write a post about what I’ve been doing in my first week of university break. 

<a href=”https://kenku.org/”>Kenku</a> (Currently Beta testers only) is an application that I'm busy developing that hopes to help combat sports athletes better manage their training sessions and streamline their learning and skill acquisition. I see it as a mobile app in the future but for now I'm building it on the web with the SuKit stack (hosted on Vercel) to minimize developer rage and maximize iteration speed. I really believe that iteration speed is everything when building a project, you need to be able to pivot or abandon features whilst losing as little time as possible. 

Key Takeaways From the first week
<ul>
<li>Nothing feels better than making something, solving problems and being engrossed in a problem for hours on end</li> 

<li>If you think AI is going to replace you, you have a skill issue.Chat-GPT is a child with instant access to the internet who can also talk really fast. It knows a lot but it makes stupid mistakes and often gives sub-optimal solutions to simple problems. I’ve found using it for anything more than boiler-plate to be more time-consuming than just writing the code by myself. </li>

<li> You can never go wrong with reading the docs </li>
<ul>

Things im struggling with, 
<ul>
<li>
UI design - this is hard, like really hard. Going to have to invest a good amount of time into learning how to make an intuitive, user friendly frontend 
</li>
<li>
Treading the line between complexity and simplicity. Great software has value in its ability to do complex things, doing complex things simply is the goal but doing complex things simply is hard. It's usually far easier and faster to do complex things in a complex way. Not sure what the solution is here, probably just a skill issue to be honest. </li><ul>



